[tox]
minversion = 3.10
isolated_build = True
skip_missing_interpreters = True
requires =
    tox-gh-actions
envlist =  # order is important
    style
    {test, coverage_report, wheel}-py3{10}

[gh-actions]
python =
    3.10: {test, coverage_report_xml}-py310

[testenv]
package = wheel
setenv =
    PIP_DISABLE_PIP_VERSION_CHECK=1
    PYTHONWARNINGS=default
extras =

[testenv:style]
extras =
    {[testenv]extras}
    dev
commands =
    pre-commit run --all-files {posargs}

[testenv:test-py3{10}]
extras =
    {[testenv]extras}
    tests
commands =
    coverage erase --data-file=build.out/.coverage.{basepython}
    coverage run --data-file=build.out/.coverage.{basepython} -m pytest \
        --self-contained-html \
        --html=build.out/{envname}/pytest.html \
        --html-report=build.out/{envname}/pytest-report.html \
        {posargs:tests}

[testenv:coverage_report-py3{10}]
skip_install = true
deps = coverage[toml]
depends =
    test-{basepython}
commands_pre =
commands =
    coverage combine --data-file=build.out/.coverage.{basepython}
    coverage report --data-file=build.out/.coverage.{basepython}
    coverage html --data-file=build.out/.coverage.{basepython} --directory=build.out/{envname}
    coverage xml --data-file=build.out/.coverage.{basepython} -o build.out/{envname}/coverage.xml

[testenv:coverage_report_xml-py3{10}]
skip_install = true
deps = coverage[toml]
depends =
    coverage_report-{basepython}
commands_pre =
commands =
    coverage xml --data-file=build.out/.coverage.{basepython} -o build.out/{envname}/coverage.xml

[testenv:lint-py3{10}]
extras =
    {[testenv]extras}
    dev
commands =
    pylint \
        vsg \
        tests

[testenv:wheel-py3{10}]
package = skip
deps =
    build
commands =
    python -m build \
        --wheel \
        --outdir=dist/{envname} \
        .

[testenv:docs]
extras =
    docs
commands =
    sphinx-build -M {env:SPHINXBUILDER:html} docs build.out/{envname} {env:SPHINXOPTS:}
